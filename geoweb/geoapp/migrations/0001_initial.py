# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-01-15 04:45
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ControlPoint',
            fields=[
                ('controlpt_id', models.AutoField(primary_key=True, serialize=False)),
                ('geometry', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=2163)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('x', models.FloatField(blank=True, null=True)),
                ('y', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=25)),
            ],
            options={
                'db_table': 'control_point',
            },
        ),
        migrations.CreateModel(
            name='ForestAgeType',
            fields=[
                ('forestagetype_id', models.IntegerField(primary_key=True, serialize=False)),
                ('forestagetype_cd', models.CharField(blank=True, max_length=3)),
                ('forestagetype_dsc', models.CharField(blank=True, max_length=30)),
            ],
            options={
                'db_table': 'forest_age_type',
            },
        ),
        migrations.CreateModel(
            name='ForestType',
            fields=[
                ('foresttype_id', models.IntegerField(primary_key=True, serialize=False)),
                ('foresttype_cd', models.CharField(blank=True, max_length=3)),
                ('foresttype_dsc', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'db_table': 'forest_type',
            },
        ),
        migrations.CreateModel(
            name='HarvestType',
            fields=[
                ('harvesttype_id', models.IntegerField(primary_key=True, serialize=False)),
                ('harvesttype_cd', models.CharField(blank=True, max_length=3)),
                ('harvesttype_dsc', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'db_table': 'harvest_type',
            },
        ),
        migrations.CreateModel(
            name='MonthType',
            fields=[
                ('monthtype_id', models.IntegerField(primary_key=True, serialize=False)),
                ('monthtype_dsc', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'month_type',
            },
        ),
        migrations.CreateModel(
            name='SeasonType',
            fields=[
                ('seasontype_id', models.IntegerField(primary_key=True, serialize=False)),
                ('seasontype_dsc', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'season_type',
            },
        ),
        migrations.CreateModel(
            name='SeverityType',
            fields=[
                ('severity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('severity_cd', models.CharField(blank=True, max_length=3)),
                ('severity_dsc', models.CharField(blank=True, max_length=30)),
            ],
            options={
                'db_table': 'severity_type',
            },
        ),
        migrations.CreateModel(
            name='SpeciesTreeType',
            fields=[
                ('speciestreetype_id', models.IntegerField(primary_key=True, serialize=False)),
                ('speciestreetype_cd', models.CharField(max_length=3)),
                ('speciestreetype_dsc', models.CharField(max_length=50)),
                ('speciestreetype_bn', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['speciestreetype_dsc'],
                'db_table': 'species_tree_type',
            },
        ),
        migrations.CreateModel(
            name='StandArea',
            fields=[
                ('standarea_id', models.AutoField(primary_key=True, serialize=False)),
                ('standarea_uuid_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('geometry', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=2163)),
                ('stand_no', models.IntegerField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('transaction_start_date', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('foresttype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='geoapp.ForestType')),
            ],
            options={
                'db_table': 'stand_area',
            },
        ),
        migrations.CreateModel(
            name='StandAreaHistory',
            fields=[
                ('standareahist_id', models.AutoField(primary_key=True, serialize=False)),
                ('standarea_id', models.IntegerField(blank=True, null=True)),
                ('geometry', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=2163)),
                ('stand_no', models.IntegerField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('foresttype_id', models.IntegerField(blank=True, null=True)),
                ('transaction_start_date', models.DateTimeField(blank=True, null=True)),
                ('transaction_end_date', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stand_area_history',
            },
        ),
        migrations.CreateModel(
            name='StandStatus',
            fields=[
                ('standstatus_id', models.AutoField(primary_key=True, serialize=False)),
                ('year', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('recommended_treatment', models.CharField(blank=True, max_length=255)),
                ('notes', models.CharField(blank=True, max_length=255)),
                ('standstatus_uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('stand_no', models.IntegerField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('damage_severity', models.ForeignKey(blank=True, db_column='damage_severity', null=True, on_delete=django.db.models.deletion.CASCADE, to='geoapp.SeverityType')),
                ('standarea_uuid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geoapp.StandArea', to_field='standarea_uuid_id')),
            ],
            options={
                'db_table': 'stand_status',
                'verbose_name_plural': 'stand_statuses',
            },
        ),
        migrations.CreateModel(
            name='StandType',
            fields=[
                ('standtype_id', models.IntegerField(primary_key=True, serialize=False)),
                ('standtype_cd', models.CharField(blank=True, max_length=3)),
                ('standtype_dsc', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'db_table': 'stand_type',
            },
        ),
        migrations.CreateModel(
            name='StockingType',
            fields=[
                ('stockingtype_id', models.IntegerField(primary_key=True, serialize=False)),
                ('stockingtype_cd', models.CharField(blank=True, max_length=3)),
                ('stockingtype_dsc', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'stocking_type',
            },
        ),
        migrations.CreateModel(
            name='Stream',
            fields=[
                ('stream_id', models.AutoField(primary_key=True, serialize=False)),
                ('geometry', django.contrib.gis.db.models.fields.LineStringField(blank=True, null=True, srid=2163)),
                ('shape_leng', models.CharField(blank=True, max_length=25)),
                ('stream_type', models.CharField(blank=True, max_length=25)),
                ('stream_name', models.CharField(blank=True, max_length=25)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'stream',
            },
        ),
        migrations.CreateModel(
            name='StreamsideManagementZone',
            fields=[
                ('smz_id', models.AutoField(primary_key=True, serialize=False)),
                ('geometry', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=2163)),
                ('shape_leng', models.FloatField(blank=True, null=True)),
                ('et_id', models.CharField(blank=True, max_length=255)),
                ('shape_area', models.FloatField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'streamside_management_zone',
            },
        ),
        migrations.CreateModel(
            name='TaskStatusType',
            fields=[
                ('taskstatus_id', models.AutoField(primary_key=True, serialize=False)),
                ('status_code', models.CharField(blank=True, max_length=3)),
                ('status_dsc', models.CharField(blank=True, max_length=30)),
            ],
            options={
                'db_table': 'task_status_type',
            },
        ),
        migrations.CreateModel(
            name='Tree',
            fields=[
                ('tree_id', models.AutoField(primary_key=True, serialize=False)),
                ('geometry', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=2163)),
                ('start_year', models.CharField(blank=True, max_length=4)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('speciestreetype', models.ForeignKey(blank=True, max_length=50, on_delete=django.db.models.deletion.CASCADE, to='geoapp.SpeciesTreeType')),
            ],
            options={
                'db_table': 'tree',
            },
        ),
        migrations.CreateModel(
            name='UnitAreaType',
            fields=[
                ('unitareatype_id', models.IntegerField(primary_key=True, serialize=False)),
                ('unitareatype_cd', models.CharField(max_length=3)),
                ('unitareatype_dsc', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'unit_area_type',
            },
        ),
        migrations.CreateModel(
            name='UnitLengthType',
            fields=[
                ('unitlengthtype_id', models.IntegerField(primary_key=True, serialize=False)),
                ('unitlengthtype_cd', models.CharField(max_length=3)),
                ('unitlengthtype_dsc', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'unit_length_type',
            },
        ),
        migrations.CreateModel(
            name='UserUpload',
            fields=[
                ('userupload_id', models.AutoField(primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to='user_data')),
                ('description', models.CharField(max_length=255, null=True)),
                ('create_date', models.DateField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_upload',
            },
        ),
        migrations.CreateModel(
            name='WaterPoint',
            fields=[
                ('waterpoint_id', models.AutoField(primary_key=True, serialize=False)),
                ('geometry', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=2163)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'water_point',
            },
        ),
        migrations.CreateModel(
            name='WaterType',
            fields=[
                ('watertype_id', models.IntegerField(primary_key=True, serialize=False)),
                ('watertype_cd', models.CharField(blank=True, max_length=3)),
                ('watertype_dsc', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'db_table': 'water_type',
            },
        ),
        migrations.AddField(
            model_name='waterpoint',
            name='watertype',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='geoapp.WaterType'),
        ),
    ]
